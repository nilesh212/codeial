<ul>
    <%for(post of posts){%>
    <li>
      <p><%= post.content %> <br /><small><%= post.user.name%></small></p>
      <div class="post-comments">
        <%if(locals.user){%>
        <form action="/comments/create" method="post">
          <input
            type="text"
            name="content"
            placeholder="Type here to add comment...."
            required
          />
          <input type="hidden" name="post" value="<%= post._id%>" />
          <input type="submit" value="Add Comment" />
        </form>
        <%}%>
        <div class="post-comments-list">
          <ul id="post-comments-<%= post._id%>">
            <% for (comment of post.comments){%>
            <p>
              <%= comment.content%>
              <br />
              <small> <%= comment.user.name%> </small>
            </p>
            <%}%>
          </ul>
        </div>
      </div>
    </li>
    <%}%>
  </ul>



//-----------------------------------------------------------------------------------------------------
//-------------------------HOME_POSTS.JS----------------------------------------------------------------------------
//-----------------------------------------------------------------------------------------------------

// const { create } = require("tar");

{
  //method  to submit the form data for new post using AJAX
  let createPost = function () {
    let newPostForm = $("#new-post-form");

    newPostForm.submit(function (e) {
      e.preventDefault();
      $.ajax({
        type: "post",
        url: "/posts/create",
        data: newPostForm.serialize(), //to make json data
        success: function (data) {
          let newPost = newPostDom(data.data.post);

          $("#posts-list-container>ul").prepend(newPost);

          deletePost($(".delete-post-button", newPost));
          // console.log("Hi");
          {
            // console.log(newPost[0]);
            let postId = data.data.post._id;
            let newCommentForm = $(`#post-${postId}-comment-form`);
            createComment(newCommentForm);
          }
        },
        error: function (error) {
          console.log(error.responseText);
        },
      });
    });
  };

  // method to create a post in DOM
  let newPostDom = function (post) {
    new Noty({
      theme: "relax",
      text: "Successfully added Post",
      type: "success",
      layout: "topRight",
      timeout: 1500,
    }).show();
    return $(`<li id="post-${post._id}">
                  <p>
                    <small>
                      <a class="delete-post-button" href="/posts/destroy/${post._id}">X</a>
                    </small> ${post.content}
                    <br />
                    <small> ${post.user.name} </small>
                  </p>
                  <div class="post-comments">
                    <form id="post-${post._id}-comment-form" action="/comments/create" method="POST">
                      <input
                        type="text"
                        name="content"
                        placeholder="Type Here to add comment..."
                        required
                      />
                      <input type="hidden" name="post" value="${post._id}" />
                      <input type="submit" value="Add Comment" />
                    </form>
                
                    <div class="post-comments-list-${post._id}">
                      <ul id="post-comments-${post._id}">
                        
                      </ul>
                    </div>
                  </div>
  </li>
  `);
  };

  //method to delete a post from DOM
  let deletePost = function (deleteLink) {
    $(deleteLink).click(function (e) {
      e.preventDefault();

      $.ajax({
        type: "get",
        url: $(deleteLink).prop("href"),
        success: function (data) {
          $(`#post-${data.data.post_id}`).remove();
          new Noty({
            theme: "relax",
            text: "Successfully deleted Post and associated comments!",
            type: "success",
            layout: "topRight",
            timeout: 1500,
          }).show();
        },
        error: function (error) {
          console.log(error.responseText);
        },
      });
    });
  };
  createPost();

  let createComment = function (newCommentForm) {
    // let newCommentForm = $("#new-comment-form");
    newCommentForm.submit(function (e) {
      e.preventDefault();

      $.ajax({
        type: "post",
        url: "/comments/create",
        data: newCommentForm.serialize(),
        success: function (data) {
          let newComment = newCommentDom(data.data.comment);
          // console.log(newComment);
          $(`.post-comments-list-${data.data.comment.post}>ul`).prepend(
            newComment
          );
          deleteComment($(`.delete-comment-button`, newComment));
        },
        error: function (error) {
          console.log(error.responseText);
        },
      });
      console.log("hi comemnts");
    });
  };

  let newCommentDom = function (comment) {
    // console.log("adding the comment");
    return $(`<li id="comment-${comment._id}">
                <p>
                  <small>
                    <a class="delete-comment-button" href="/comments/destroy/${comment._id}">X</a>
                  </small>
                  ${comment.content}
                  <br />
                  <small> ${comment.user.name} </small>
                </p>
              </li>`);
  };

  let deleteComment = function (deleteLink) {
    $(deleteLink).click(function (e) {
      e.preventDefault();
      $.ajax({
        type: "get",
        url: $(deleteLink).prop("href"),
        success: function (data) {
          $(`#comment-${data.data.commentId}`).remove();
          console.log("Comment Deleted!");
        },
        error: function (error) {
          console.log(error.responseText);
        },
      });
    });
  };

  let posts = $("#posts-list-container>ul>li");
  for (post of posts) {
    // console.log(post);
    deletePost($(".delete-post-button", post));
    let postId = post.id.split("-")[1];
    // console.log(typeof postId);
    let newCommentForm = $(`#post-${postId}-comment-form`);
    createComment(newCommentForm);
  }
}
